<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leadership on Organizing Chaos</title>
    <link>https://jkaye2012.github.io/tags/leadership/</link>
    <description>Recent content in leadership on Organizing Chaos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jkaye2012.github.io/tags/leadership/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overcorrection</title>
      <link>https://jkaye2012.github.io/posts/overcorrection/</link>
      <pubDate>Tue, 06 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://jkaye2012.github.io/posts/overcorrection/</guid>
      <description>Enable mindset changes by forcing changes to behaviors Changing the way that we think about things is difficult. I&amp;rsquo;d hazard a guess that everyone has tried and failed at last once, even when imbued with great motivation to make a change. It&amp;rsquo;s relatively easy to decide that a change is needed, and it can even be easy to force our thoughts in a different direction for a short period of time, but somehow after a few short days or weeks we find ourselves right back where we started wondering where it all went wrong.</description>
    </item>
    <item>
      <title>Software engineering is about thinking, not typing</title>
      <link>https://jkaye2012.github.io/posts/thinking-not-typing/</link>
      <pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://jkaye2012.github.io/posts/thinking-not-typing/</guid>
      <description>Weeks of coding can save you hours of planning Software engineering best practices emphasize and value the importance of iterative work. They encourage working in ways that give us opportunities to make decisions frequently and adapt to changing circumstances. These principles are nearly ubiquitous and seem necessary for successful engineering efforts at large scales, but the concept is sometimes taken to an extreme that can be unhelpful. While it&amp;rsquo;s almost always a good idea to maintain the ability to iterate quickly and change our minds, that doesn&amp;rsquo;t mean that one shouldn&amp;rsquo;t take time to think before they begin to act.</description>
    </item>
    <item>
      <title>Simplicity isn&#39;t easy</title>
      <link>https://jkaye2012.github.io/posts/simplicity-isnt-easy/</link>
      <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://jkaye2012.github.io/posts/simplicity-isnt-easy/</guid>
      <description>Simple is the opposite of complex, easy is the opposite of difficult I spend a lot of time thinking about complexity. I read an essay recently about complexity and cognitive load in software engineering that touches on a specific point that I think is important to the professional development of software: the difference between simplicity and ease.
Like many engineers, I don&amp;rsquo;t enjoy working within overly complex systems. The cognitive load required to get anything done within such code bases is far greater than it should be.</description>
    </item>
    <item>
      <title>Cheat codes</title>
      <link>https://jkaye2012.github.io/posts/cheat-codes/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://jkaye2012.github.io/posts/cheat-codes/</guid>
      <description>Support your teams&#39; decision making processes while giving them the space they need to function autonomously. Autonomy is an important element of highly effective teams. As a leader, there&amp;rsquo;s a difficult balance to be struck between helping your teams get things done and providing the space and freedom that they need to solve problems themselves and own their solutions. Concepts like go slow to move fast can be used to help with this, but even still the core problem remains: how can a leader help teams solve difficult problems without reducing their ability to function autonomously?</description>
    </item>
  </channel>
</rss>
